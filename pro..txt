import java.util.ArrayList;
import java.util.Scanner;
import java.util.UUID;

class Show {
    private String id;
    private String name;
    private int totalSeats;
    private int bookedSeats;

    public Show(String name, int totalSeats) {
        this.id = UUID.randomUUID().toString();
        this.name = name;
        this.totalSeats = totalSeats;
        this.bookedSeats = 0;
    }

    public String getId() {
        return id;
    }

    public String getName() {
        return name;
    }

    public int getTotalSeats() {
        return totalSeats;
    }

    public int getBookedSeats() {
        return bookedSeats;
    }

    public int getAvailableSeats() {
        return totalSeats - bookedSeats;
    }

    public boolean bookTickets(int numberOfTickets) {
        if (numberOfTickets <= getAvailableSeats()) {
            bookedSeats += numberOfTickets;
            return true;
        }
        return false;
    }

    @Override
    public String toString() {
        return "Show ID: " + id + ", Name: " + name + ", Available Seats: " + getAvailableSeats();
    }
}

public class BookingSystem {
    private ArrayList<Show> shows;

    public BookingSystem() {
        shows = new ArrayList<>();
    }

    public void addShow(String name, int totalSeats) {
        shows.add(new Show(name, totalSeats));
    }

    public void listShows() {
        if (shows.isEmpty()) {
            System.out.println("No shows available.");
        } else {
            for (Show show : shows) {
                System.out.println(show);
            }
        }
    }

    public Show findShowById(String showId) {
        for (Show show : shows) {
            if (show.getId().equals(showId)) {
                return show;
            }
        }
        return null;
    }

    public void bookTickets(String showId, int numberOfTickets) {
        Show show = findShowById(showId);
        if (show == null) {
            System.out.println("Show not found.");
            return;
        }

        if (show.bookTickets(numberOfTickets)) {
            System.out.println("Successfully booked " + numberOfTickets + " tickets for show: " + show.getName());
        } else {
            System.out.println("Failed to book tickets. Not enough available seats.");
        }
    }

    public static void main(String[] args) {
        BookingSystem system = new BookingSystem();
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("\n1. Add Show");
            System.out.println("2. List Shows");
            System.out.println("3. Book Tickets");
            System.out.println("4. Exit");
            System.out.print("Choose an option: ");
            int choice = scanner.nextInt();
            scanner.nextLine(); 

            switch (choice) {
                case 1:
                    System.out.print("Enter show name: ");
                    String name = scanner.nextLine();
                    System.out.print("Enter total seats: ");
                    int totalSeats = scanner.nextInt();
                    scanner.nextLine(); 
                    system.addShow(name, totalSeats);
                    break;

                case 2:
                    system.listShows();
                    break;

                case 3:
                    system.listShows();
                    System.out.print("Enter show ID to book: ");
                    String showId = scanner.nextLine();
                    System.out.print("Enter number of tickets to book: ");
                    int numberOfTickets = scanner.nextInt();
                    scanner.nextLine(); 
                    system.bookTickets(showId, numberOfTickets);
                    break;

                case 4:
                    System.out.println("Exiting...");
                    scanner.close();
                    System.exit(0);

                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }
}